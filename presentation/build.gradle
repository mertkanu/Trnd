apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.cincoy.trnd"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode generateVersionCode()
        versionName generateVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:1.0.2"
    implementation "androidx.recyclerview:recyclerview:$androidXVersion"
    implementation "com.google.android.material:material:$androidXVersion"
    implementation "androidx.cardview:cardview:$androidXVersion"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation rootProject.ext.rxJava
    implementation rootProject.ext.retrofit
    implementation rootProject.ext.retrofitGsonConverter
    implementation rootProject.ext.retrofitLoggingInterceptors
    implementation rootProject.ext.retrofitRxJava2Adapter
    implementation rootProject.ext.room

    testImplementation rootProject.ext.junit
    testImplementation rootProject.ext.mockito
    androidTestImplementation rootProject.ext.androidTestRunner
    androidTestImplementation 'org.mockito:mockito-android:2.18.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0-beta01'

    implementation project(':data')
    implementation project(':domain')
}

private Integer generateVersionCode() {
    return rootProject.ext.minSdkVersion * 10000000 + rootProject.ext.versionMajor * 10000 + rootProject.ext.versionMinor * 100 + rootProject.ext.versionPatch
}

private String generateVersionName() {
    String versionName = "${rootProject.ext.versionMajor}.${rootProject.ext.versionMinor}.${rootProject.ext.versionPatch}"
    if (rootProject.ext.versionClassifier == null && rootProject.ext.isSnapshot) {
        ext.versionClassifier = "SNAPSHOT"
    }

    if (ext.versionClassifier != null) {
        versionName += "-" + ext.versionClassifier
    }
    return versionName
}
